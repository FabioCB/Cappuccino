apply plugin: 'com.android.library'

group = rootProject.ext.GROUP
version = rootProject.ext.VERSION_NAME

def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName version

        buildConfigField "String", "LIBRARY_VERSION", "\"${rootProject.ext.VERSION_NAME}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""

//        consumerProguardFiles 'consumer-proguard-rules.pro', getDefaultProguardFile('proguard-rules.txt')
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }

    buildTypes {
        debug {
            // Run test code coverage reports by default on debug builds
            testCoverageEnabled = true
        }

        release {
            minifyEnabled true
        }
    }

    testOptions {
        // Allows Android code to be called from unit tests without causing a crash
        unitTests.returnDefaultValues = true
    }

//    lintOptions {
//        abortOnError false
//    }
}

configurations {
    javadocDeps
}

dependencies {
    compile 'com.android.support:support-annotations:23.1.1'
    compile 'com.android.support.test.espresso:espresso-core:2.2.1'

    // Unit tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    //
    javadocDeps 'com.android.support:support-annotations:23.1.1'
}

// Upload library to bintray
apply from: rootProject.file('gradle/gradle-bintray-install.gradle')
apply from: rootProject.file('gradle/gradle-bintray-upload.gradle')

//apply from: rootProject.file('gradle/checkstyle.gradle')
//apply from: rootProject.file('gradle/gradle-mvn-push.gradle')